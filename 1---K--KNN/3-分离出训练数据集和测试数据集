随机抽取出原始数据集的 80% 作为训练数据集 ， 20% 的数据集作为测试数据集
通过测试数据集直接判断模型的好坏 ， 在模型进入真正的生产环境前进行改进
train test split

# _*_ coding:utf-8 _*_
_author_ = 'lijh'
_date_ = '2018/1/22 0022 14:12'

import numpy as np

def train_test_split(X , y , test_ratio = 0.2 , seed = None):
    """将数据 X 和 y 按照test_ratio分割成X_train , X_test , y_train , y_test"""
    assert X.shape[0] == y.shape[0],\
        "the size of X must be equal to the size of y"
    assert 0.0 <= test_ratio <= 1.0 ,\
        "test_ration must be valid"

    if seed:
        np.random.seed(seed)
    shuffled_indexes = np.random.permutation(len(X))

    test_size = int(len(X) * test_ratio)
    test_indexes = shuffled_indexes[:test_size]
    train_indexes = shuffled_indexes[test_size:]

    X_train = X[train_indexes]
    y_train = y[train_indexes]

    X_test = X[test_indexes]
    y_test = y[test_indexes]

    return X_train,X_test,y_train,y_test
